[
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "1  Introduzione",
    "section": "",
    "text": "1.1 Quanta fatica\nLo scopo del corso è fornire gli strumenti necessari per eseguire semplici analisi dei dati mediante R.\nIl corso si conclude con una piccola analisi guidata svolta dai partecipanti e strutturata in un documento a se stante.\nDurante il proseguo del corso impareremo a:\nL’utilizzo di un linguaggio di programmazione richiede un importante investimento iniziale per apprendere le basi del linguaggio, le funzioni principali e il loro campo di applicabilità. Tuttavia, le energie spese sono ripagate dalla possibilità di poter riutilizzare, adattare il codice e poter ripetere l’analisi con relativamente poco sforzo, rendendo l’intero processo riproducibile e documentabile.\nIn aggiunta, l’apprendimento di un linguaggio di programmazione permette di aprire numerose porte, talvolta semplificando il lavoro quotidiano in molti campi. Infatti, volendo solo citare una parte delle cose che si possono fare con R, non è difficile ottenere:",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduzione</span>"
    ]
  },
  {
    "objectID": "intro.html#quanta-fatica",
    "href": "intro.html#quanta-fatica",
    "title": "1  Introduzione",
    "section": "",
    "text": "documenti dinamici parametrizzati;\napplicazioni interattive accessibili attraverso un browser;\ninterfacce di programmazione di applicazioni (API) per l’esecuzione di funzioni da remoto.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduzione</span>"
    ]
  },
  {
    "objectID": "intro.html#prerequisiti",
    "href": "intro.html#prerequisiti",
    "title": "1  Introduzione",
    "section": "1.2 Prerequisiti",
    "text": "1.2 Prerequisiti\nIl corso può essere seguito da qualunque persona con una certa dimestichezza con i computer e con la logica di base. Il candidato ideale dovrebbe aver già svolto qualche analisi su dati numerici, utilizzando strumenti statistici di base e fogli di calcolo. La conoscenza di un linguaggio di programmazione diverso da R non è richiesta ma sicuramente aiuta.\nL’esecuzione del codice presentato all’interno del corso richiede l’installazione di R, RStudio e dei pacchetti data.table, ggplot2, glue e gt.\n\n1.2.1 R\nIl download di R può essere eseguito dal comprensive R archive network (CRAN), seguendo le istruzioni relative al proprio sistema operativo. Ogni anno viene rilasciata una nuova versione e circa tre nuove versioni minori: se si intende usare R con regolarità è consigliato mantenere l’applicativo aggiornato.\nSi tratta di un software libero, rilasciato con un mix di licenze GNU General Public License v2 e v3 e GNU Lesser General Public License v2.1.\n\n\n1.2.2 RStudio\nRStudio è l’ambiente integrato di sviluppo (IDE) attualmente maggiormente utilizzato con R: permette la gestione completa di un progetto, la connessione a sorgenti di dati esterni, quali database, e l’integrazione con sistemi di gestione delle versioni come git. L’applicazione può essere scaricata dal sito dello sviluppatore Posit.\nSi tratta di un software libero rilasciato con licenza GNU Affero General Public License v3.\n\n\n\n\n\n\n\n\nFigura 1.1: Schermata di RStudio: in alto, da sinistra a destra, si trova il pannello dedicato al codice sorgente, al suo fianco il pannello dedicato agli ambienti e allo storico. In basso, da sinistra a destra, si trova la console e il pannello dedicato agli output.\n\n\n\n\n\nL’utilizzo di RStudio o di un IDE non è strettamente necessario per l’utilizzo di R, tuttavia semplifica di molto il suo utilizzo. Altri IDE comunemente utilizzati con R sono VScode, Vim ed Emacs.\n\n\n1.2.3 I pacchetti di R\nLe funzionalità offerte da R possono essere espanse ricorrendo a pacchetti. La lista completa, estremamente lunga e variegata, è presente sul sito del CRAN. Alcuni di questi pacchetti sono sviluppati a livello amatoriale, altri da statistici e ingegneri del software di primissimo piano a livello mondiale. Tutte le funzioni e i dati presenti in un pacchetto sono documentati, il codice sorgente è totalmente consultabile e spesso si può collaborare direttamente al suo sviluppo su piattaforme quali GitHub. Molti di questi pacchetti sono collegati a libri di testo o articoli scientifici.\nI pacchetti possono essere installati all’interno di R mediante il comando:\n\ninstall.packages(\"pacchetto\")\n\nDurante il corso utilizzeremo alcuni pacchetti di largo utilizzo:\n\ndata.table: permette il caricamento e la manipolazione in modo efficiente di insiemi di dati di grandi dimensioni e presenta una sintassi particolare ma di rapido e intuitivo utilizzo;\nggplot2: è il pacchetto d’elezione per la produzione di grafici;\nreadxl: è uno dei pacchetti utilizzabili per importare dati da fogli di calcolo Excel;\nglue: semplifica il concatenamento di stringhe, lo useremo in modo diretto raramente;\ngt: viene utilizzato per la produzione di tabelle di qualità. Ogni tabella che vedrete nel corso sarà fatta utilizzando questo pacchetto ma raramente lo utilizzeremo in modo diretto.\n\nInstalliamo i pacchetti richiesti racchiudendoli all’interno di un vettore con il comando c() e scrivendo il seguente comando all’interno della console di R, dopo il simbolo &gt;:\n\ninstall.packages(c(\"data.table\", \"readxl\", \"ggplot2\", \"glue\", \"gt\"))\n\nQuando ne avremo bisogno saremo pronti a caricare e usare i nostri pacchetti.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduzione</span>"
    ]
  },
  {
    "objectID": "intro.html#per-approfondire",
    "href": "intro.html#per-approfondire",
    "title": "1  Introduzione",
    "section": "1.3 Per approfondire",
    "text": "1.3 Per approfondire\nNel caso il materiale presentato nel corso non sia sufficiente o sia inadatto per le vostre esigenze, in rete è possibile reperire numerosissimi testi gratuiti. Tra questi si segnalano:\n\nHands-On Rrogramming with R scritto da Garrett Grolemund;\nR for Data Science scritto da Hadley Wickham, Mine Çetinkaya-Rundel, and Garrett Grolemund;\nAdvanced R scritto da Hadley Wickham.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduzione</span>"
    ]
  },
  {
    "objectID": "basics.html",
    "href": "basics.html",
    "title": "Le basi",
    "section": "",
    "text": "In questa prima parte inizieremo a prendere dimestichezza con le basi di R:\n\nnel primo capitolo partiremo dall’interazione con la console fino a scrivere ed eseguire il nostro primo script;\nnel secondo capitolo ci concentreremo sull’uso delle diverse tipologie di oggetti di R;\nnel terzo capitolo importeremo dati da file esterni;\nnel quarto capitolo inizieremo a fare i primi esperimenti di trasformazione dei dati con la libreria data.table.",
    "crumbs": [
      "Le basi"
    ]
  },
  {
    "objectID": "basics.html#una-bella-calcolatrice",
    "href": "basics.html#una-bella-calcolatrice",
    "title": "2  Le basi",
    "section": "",
    "text": "[1] 5",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Le basi</span>"
    ]
  },
  {
    "objectID": "basics.html#funzioni",
    "href": "basics.html#funzioni",
    "title": "2  Le basi",
    "section": "2.2 Funzioni",
    "text": "2.2 Funzioni\nLe funzioni sono una parte fondamentale di R e consentono di eseguire una serie di operazioni dati degli input, per ottenere nessuno, uno o più output: si tratta di una definizione generica perché sono elementi estremamente generici e incontreremo funzioni pressoché ovunque. Durante il corso non adotteremo la distinzione tra funzioni e metodi, dove le prime danno output e le seconde no: per noi qualunque contenitore di operazioni che vengano applicate a un input sarà una funzione.\nR permette già di utilizzare diverse funzioni. Possiamo assegnare alcuni numeri a una variabile e applicare a essi la funzione somma:\n\nb &lt;- c(2, 3, 5)\nsum(b)\n#&gt; [1] 10\n\nGli input delle funzioni vengono specificati all’interno delle parentesi tonde, ci sono funzioni che richiedono pochi input e altre che ne richiedono di più, nella prossima sezione vedremo come acquisire informazioni sull’utilizzo di una funzione.\nOltre alle funzioni già disponibili, possiamo scrivere delle funzioni personalizzate. Scrivere funzioni efficienti, robuste e ben documentate richiede pratica, però la sintassi di base è:\n\n# la funzione fammi_il_caffe prende come argomenti due stringa di caratteri\n# la prima definisce il tipo e può essere caffè o orzo\n# la seconda definisce la modalità e può essere corto, lungo e macchiato\n# l'output è una stringa di testo\nfammi_il_caffe &lt;- function(tipo = \"caffè\",\n                           modo = \"corto\"){\n  # controllo che l'input abbia le caratteristiche desiderate\n  stopifnot(is.character(tipo))\n  stopifnot(is.character(modo))\n  stopifnot(tipo %in% c(\"caffè\", \"orzo\"))\n  stopifnot(modo %in% c(\"corto\", \"lungo\", \"macchiato\"))\n  \n  # determino il prezzo scegliendo un numero casuale tra 1 e 2 con intervallo 0.1\n  prezzo &lt;- sample(seq(from = 1, to = 2, by = 0.1), 1)\n  # formatto il caffé e il prezzo\n  prodotto_txt &lt;- paste(\"Ecco a lei il suo\", tipo, modo, sep = \" \")\n  prezzo_txt &lt;- paste(\"Sono\", prezzo, \"€.\", sep = \" \")\n  \n  # il risultato è l'ultimo comando della funzione\n  paste(prodotto_txt, prezzo_txt, sep = \". \")\n}\n\n# utilizzo la funzione\nfammi_il_caffe()\n#&gt; [1] \"Ecco a lei il suo caffè corto. Sono 1.6 €.\"\nfammi_il_caffe(\"orzo\", \"lungo\")\n#&gt; [1] \"Ecco a lei il suo orzo lungo. Sono 1.4 €.\"\nfammi_il_caffe(\"orzo\", \"corretto\")\n#&gt; Error in fammi_il_caffe(\"orzo\", \"corretto\"): modo %in% c(\"corto\", \"lungo\", \"macchiato\") non è TRUE\n\nGli argomenti o input della funzione sono racchiusi tra parentesi tonde, con il loro eventuale valore predefinito dichiarato dopo l’uguale. Il corpo della funzione è racchiuso tra parentesi graffe e tipicamente contiene una parte di validazione degli argomenti, il cui scopo è assicurarsi che la funzione non venga utilizzata al di fuori del suo ambito di utilizzo, una parte in cui vengono sviluppati i conti e una parte finale contenente il risultato.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Le basi</span>"
    ]
  },
  {
    "objectID": "basics.html#chiedere-aiuto",
    "href": "basics.html#chiedere-aiuto",
    "title": "2  Le basi",
    "section": "2.4 Chiedere aiuto",
    "text": "2.4 Chiedere aiuto\nQuesta è la sezione più importante dell’intero corso in quanto permette di capire come muoversi sulle proprie gambe, cadendo senza farsi troppo male e tentando di rialzarsi.\nR offre un ottimo aiuto in linea: ogni pacchetto, dataset e funzione è documentata, contiene quindi tutte le informazioni necessarie a definirne gli ambiti e modi di utilizzo. Per accedere a queste informazioni è sufficiente anteporre un ? all’elemento del quale si desidera sapere di più:\n\n?sum()\n?iris\n\nSe l’elemento di cui si vuole sapere di più è presente in un pacchetto noto ma non attualmente caricato, sarà necessario specificare il pacchetto a cui appartiene l’elemento:\n\n?ggplot2::geom_point()\n\nSe l’elemento di cui si vuole sapere di più è presente in un pacchetto ignoto, installato ma non attualmente caricato, si può lanciare una ricerca tra i pacchetti installati nel sistema anteponendo ?? all’elemento stesso e poi selezionando la voce di interesse:\n\n??geom_point()\n\nAll’interno della sezione help è presente una descrizione iniziale dell’elemento e, se si tratta di una funzione, dei diversi input richiesti, seguono poi sezioni in cui viene spesso spiegato il funzionamento delle funzione, per finire con utili esempi d’uso.\nA volte, potrebbe non essere sufficiente ricorrere all’aiuto in linea, in tal caso si consiglia di rivolgersi a Google o qualche large language model (LLM) come DeepSeek, ChatGPT o Perplexity. Quest’ultimi strumenti di intelligenza artificiale permettono, a fronte di richieste dettagliate e ben strutturate di farsi scrivere e spiegare interi programmi, anche complessi, richiedendo poche rifiniture manuali.\nAlternativi e complementari all’uso di strumenti di intelligenza artificiale, sono presenti forum dedicati alla programmazione e con una folta comunità di preparatissimi (e spesso burberi) utilizzatori di R. Tra questi forum StackOverflow risulta particolarmente ricco di spunti e risorse. Per utilizzarlo al meglio:\n\ncercate con cura se la vostra domanda sia già stata posta in passato;\nprendete spunto da domande simili per strutturare con cura la vostra richiesta;\ncreate un esempio minimo riproducibile (reprex).\n\nL’ultimo punto ha lo scopo di rendere il vostro codice riproducibile e facilmente leggibile da chi vi dovrà aiutare: inserite nel codice tutte le librerie e variabili usate e togliete tutto quanto non è indispensabile per riprodurre il problema su cui state chiedendo aiuto.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Le basi</span>"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Corso di R: dalle basi alla prima analisi dei dati",
    "section": "",
    "text": "Prefazione\nQuesto documento raccoglie il materiale presentato durante l’omonimo corso tenuto in ARPAL nel 2025.\nIl corso e l’annesso documento nascono dalla volontà degli autori di condividere con i colleghi la potenza e la bellezza dell’utilizzare un linguaggio di programmazione nell’analisi dei dati.\nIl linguaggio di programmazione scelto è R, in quanto permette sin da subito di eseguire semplici analisi di dati, richiedendo di imparare una sintassi intuitiva e qualche funzione, in gran parte già pronta o disponibile in una qualche libreria specializzata. Inoltre, con R risulta facile creare grafici efficaci e densi di contenuto.\nQuesto documento è rilasciato gratuitamente con licenza CC BY-NC-SA 4.0.",
    "crumbs": [
      "Prefazione"
    ]
  },
  {
    "objectID": "basics.html#il-primo-script",
    "href": "basics.html#il-primo-script",
    "title": "2  Le basi",
    "section": "2.3 Il primo script",
    "text": "2.3 Il primo script\nNella sezione precedente abbiamo visto codice che spazia su più righe: inserirlo riga per riga nella console inizia ad essere scomodo e si rischia di dimenticare cosa si è fatto poche righe prima.\nPossiamo creare un file.R in cui elencare in ordine di esecuzione i comandi che vogliamo eseguire. Per farlo è sufficiente cliccare l’icona  in alto a sinistra in RStudio, selezionare Rscript e quindi salvare il file. All’interno di tale file possiamo scrivere le seguenti istruzioni:\n\n# richiamo un dataset di R\niris\n#&gt;     Sepal.Length Sepal.Width Petal.Length Petal.Width    Species\n#&gt; 1            5.1         3.5          1.4         0.2     setosa\n#&gt; 2            4.9         3.0          1.4         0.2     setosa\n#&gt; 3            4.7         3.2          1.3         0.2     setosa\n#&gt; 4            4.6         3.1          1.5         0.2     setosa\n#&gt; 5            5.0         3.6          1.4         0.2     setosa\n#&gt; 6            5.4         3.9          1.7         0.4     setosa\n#&gt; 7            4.6         3.4          1.4         0.3     setosa\n#&gt; 8            5.0         3.4          1.5         0.2     setosa\n#&gt; 9            4.4         2.9          1.4         0.2     setosa\n#&gt; 10           4.9         3.1          1.5         0.1     setosa\n#&gt; 11           5.4         3.7          1.5         0.2     setosa\n#&gt; 12           4.8         3.4          1.6         0.2     setosa\n#&gt; 13           4.8         3.0          1.4         0.1     setosa\n#&gt; 14           4.3         3.0          1.1         0.1     setosa\n#&gt; 15           5.8         4.0          1.2         0.2     setosa\n#&gt; 16           5.7         4.4          1.5         0.4     setosa\n#&gt; 17           5.4         3.9          1.3         0.4     setosa\n#&gt; 18           5.1         3.5          1.4         0.3     setosa\n#&gt; 19           5.7         3.8          1.7         0.3     setosa\n#&gt; 20           5.1         3.8          1.5         0.3     setosa\n#&gt; 21           5.4         3.4          1.7         0.2     setosa\n#&gt; 22           5.1         3.7          1.5         0.4     setosa\n#&gt; 23           4.6         3.6          1.0         0.2     setosa\n#&gt; 24           5.1         3.3          1.7         0.5     setosa\n#&gt; 25           4.8         3.4          1.9         0.2     setosa\n#&gt; 26           5.0         3.0          1.6         0.2     setosa\n#&gt; 27           5.0         3.4          1.6         0.4     setosa\n#&gt; 28           5.2         3.5          1.5         0.2     setosa\n#&gt; 29           5.2         3.4          1.4         0.2     setosa\n#&gt; 30           4.7         3.2          1.6         0.2     setosa\n#&gt; 31           4.8         3.1          1.6         0.2     setosa\n#&gt; 32           5.4         3.4          1.5         0.4     setosa\n#&gt; 33           5.2         4.1          1.5         0.1     setosa\n#&gt; 34           5.5         4.2          1.4         0.2     setosa\n#&gt; 35           4.9         3.1          1.5         0.2     setosa\n#&gt; 36           5.0         3.2          1.2         0.2     setosa\n#&gt; 37           5.5         3.5          1.3         0.2     setosa\n#&gt; 38           4.9         3.6          1.4         0.1     setosa\n#&gt; 39           4.4         3.0          1.3         0.2     setosa\n#&gt; 40           5.1         3.4          1.5         0.2     setosa\n#&gt; 41           5.0         3.5          1.3         0.3     setosa\n#&gt; 42           4.5         2.3          1.3         0.3     setosa\n#&gt; 43           4.4         3.2          1.3         0.2     setosa\n#&gt; 44           5.0         3.5          1.6         0.6     setosa\n#&gt; 45           5.1         3.8          1.9         0.4     setosa\n#&gt; 46           4.8         3.0          1.4         0.3     setosa\n#&gt; 47           5.1         3.8          1.6         0.2     setosa\n#&gt; 48           4.6         3.2          1.4         0.2     setosa\n#&gt; 49           5.3         3.7          1.5         0.2     setosa\n#&gt; 50           5.0         3.3          1.4         0.2     setosa\n#&gt; 51           7.0         3.2          4.7         1.4 versicolor\n#&gt; 52           6.4         3.2          4.5         1.5 versicolor\n#&gt; 53           6.9         3.1          4.9         1.5 versicolor\n#&gt; 54           5.5         2.3          4.0         1.3 versicolor\n#&gt; 55           6.5         2.8          4.6         1.5 versicolor\n#&gt; 56           5.7         2.8          4.5         1.3 versicolor\n#&gt; 57           6.3         3.3          4.7         1.6 versicolor\n#&gt; 58           4.9         2.4          3.3         1.0 versicolor\n#&gt; 59           6.6         2.9          4.6         1.3 versicolor\n#&gt; 60           5.2         2.7          3.9         1.4 versicolor\n#&gt; 61           5.0         2.0          3.5         1.0 versicolor\n#&gt; 62           5.9         3.0          4.2         1.5 versicolor\n#&gt; 63           6.0         2.2          4.0         1.0 versicolor\n#&gt; 64           6.1         2.9          4.7         1.4 versicolor\n#&gt; 65           5.6         2.9          3.6         1.3 versicolor\n#&gt; 66           6.7         3.1          4.4         1.4 versicolor\n#&gt; 67           5.6         3.0          4.5         1.5 versicolor\n#&gt; 68           5.8         2.7          4.1         1.0 versicolor\n#&gt; 69           6.2         2.2          4.5         1.5 versicolor\n#&gt; 70           5.6         2.5          3.9         1.1 versicolor\n#&gt; 71           5.9         3.2          4.8         1.8 versicolor\n#&gt; 72           6.1         2.8          4.0         1.3 versicolor\n#&gt; 73           6.3         2.5          4.9         1.5 versicolor\n#&gt; 74           6.1         2.8          4.7         1.2 versicolor\n#&gt; 75           6.4         2.9          4.3         1.3 versicolor\n#&gt; 76           6.6         3.0          4.4         1.4 versicolor\n#&gt; 77           6.8         2.8          4.8         1.4 versicolor\n#&gt; 78           6.7         3.0          5.0         1.7 versicolor\n#&gt; 79           6.0         2.9          4.5         1.5 versicolor\n#&gt; 80           5.7         2.6          3.5         1.0 versicolor\n#&gt; 81           5.5         2.4          3.8         1.1 versicolor\n#&gt; 82           5.5         2.4          3.7         1.0 versicolor\n#&gt; 83           5.8         2.7          3.9         1.2 versicolor\n#&gt; 84           6.0         2.7          5.1         1.6 versicolor\n#&gt; 85           5.4         3.0          4.5         1.5 versicolor\n#&gt; 86           6.0         3.4          4.5         1.6 versicolor\n#&gt; 87           6.7         3.1          4.7         1.5 versicolor\n#&gt; 88           6.3         2.3          4.4         1.3 versicolor\n#&gt; 89           5.6         3.0          4.1         1.3 versicolor\n#&gt; 90           5.5         2.5          4.0         1.3 versicolor\n#&gt; 91           5.5         2.6          4.4         1.2 versicolor\n#&gt; 92           6.1         3.0          4.6         1.4 versicolor\n#&gt; 93           5.8         2.6          4.0         1.2 versicolor\n#&gt; 94           5.0         2.3          3.3         1.0 versicolor\n#&gt; 95           5.6         2.7          4.2         1.3 versicolor\n#&gt; 96           5.7         3.0          4.2         1.2 versicolor\n#&gt; 97           5.7         2.9          4.2         1.3 versicolor\n#&gt; 98           6.2         2.9          4.3         1.3 versicolor\n#&gt; 99           5.1         2.5          3.0         1.1 versicolor\n#&gt; 100          5.7         2.8          4.1         1.3 versicolor\n#&gt; 101          6.3         3.3          6.0         2.5  virginica\n#&gt; 102          5.8         2.7          5.1         1.9  virginica\n#&gt; 103          7.1         3.0          5.9         2.1  virginica\n#&gt; 104          6.3         2.9          5.6         1.8  virginica\n#&gt; 105          6.5         3.0          5.8         2.2  virginica\n#&gt; 106          7.6         3.0          6.6         2.1  virginica\n#&gt; 107          4.9         2.5          4.5         1.7  virginica\n#&gt; 108          7.3         2.9          6.3         1.8  virginica\n#&gt; 109          6.7         2.5          5.8         1.8  virginica\n#&gt; 110          7.2         3.6          6.1         2.5  virginica\n#&gt; 111          6.5         3.2          5.1         2.0  virginica\n#&gt; 112          6.4         2.7          5.3         1.9  virginica\n#&gt; 113          6.8         3.0          5.5         2.1  virginica\n#&gt; 114          5.7         2.5          5.0         2.0  virginica\n#&gt; 115          5.8         2.8          5.1         2.4  virginica\n#&gt; 116          6.4         3.2          5.3         2.3  virginica\n#&gt; 117          6.5         3.0          5.5         1.8  virginica\n#&gt; 118          7.7         3.8          6.7         2.2  virginica\n#&gt; 119          7.7         2.6          6.9         2.3  virginica\n#&gt; 120          6.0         2.2          5.0         1.5  virginica\n#&gt; 121          6.9         3.2          5.7         2.3  virginica\n#&gt; 122          5.6         2.8          4.9         2.0  virginica\n#&gt; 123          7.7         2.8          6.7         2.0  virginica\n#&gt; 124          6.3         2.7          4.9         1.8  virginica\n#&gt; 125          6.7         3.3          5.7         2.1  virginica\n#&gt; 126          7.2         3.2          6.0         1.8  virginica\n#&gt; 127          6.2         2.8          4.8         1.8  virginica\n#&gt; 128          6.1         3.0          4.9         1.8  virginica\n#&gt; 129          6.4         2.8          5.6         2.1  virginica\n#&gt; 130          7.2         3.0          5.8         1.6  virginica\n#&gt; 131          7.4         2.8          6.1         1.9  virginica\n#&gt; 132          7.9         3.8          6.4         2.0  virginica\n#&gt; 133          6.4         2.8          5.6         2.2  virginica\n#&gt; 134          6.3         2.8          5.1         1.5  virginica\n#&gt; 135          6.1         2.6          5.6         1.4  virginica\n#&gt; 136          7.7         3.0          6.1         2.3  virginica\n#&gt; 137          6.3         3.4          5.6         2.4  virginica\n#&gt; 138          6.4         3.1          5.5         1.8  virginica\n#&gt; 139          6.0         3.0          4.8         1.8  virginica\n#&gt; 140          6.9         3.1          5.4         2.1  virginica\n#&gt; 141          6.7         3.1          5.6         2.4  virginica\n#&gt; 142          6.9         3.1          5.1         2.3  virginica\n#&gt; 143          5.8         2.7          5.1         1.9  virginica\n#&gt; 144          6.8         3.2          5.9         2.3  virginica\n#&gt; 145          6.7         3.3          5.7         2.5  virginica\n#&gt; 146          6.7         3.0          5.2         2.3  virginica\n#&gt; 147          6.3         2.5          5.0         1.9  virginica\n#&gt; 148          6.5         3.0          5.2         2.0  virginica\n#&gt; 149          6.2         3.4          5.4         2.3  virginica\n#&gt; 150          5.9         3.0          5.1         1.8  virginica\n\n# ho visto che il dataset è composto da misurazioni di lunghezze e larghezze di\n# petali e sepali di tre diverse specie di iris. Le specie considerate sono\n# setosa, versicolor e virginica: per ogni specie sono presenti 50 record.\n\n# faccio un grafico tra coppie di variabili\nplot(iris, col = iris$Species)\n\n# noto che le misurazioni relative a una specie sono ben distinte dalle altre due,\n# quest'ultime mostrano un certo grado di sovrapposizione. Vediamo se il calcolo\n# dei quartili eseguita sulle singole variabili per i diversi gruppi mi aiuta a\n# identificare i gruppi che mostrano sovrapposizione parziale nelle misure.\n\n# definisco una funzione per il calcolo dei quartili a partire da generici\n# percentili\nquartili &lt;- function(valori){\n  stopifnot(is.vector(valori))\n  \n  # uso la funzione predefinita quantile\n  quantile(valori, probs = c(0.25, 0.50, 0.75))\n}\n\n# la funzione aggregate divide una serie di dati in gruppi, applica la funzione\n# desiderata a ogni gruppo e poi ricombina i risultati\naggregate(. ~ Species, data = iris, FUN = quartili)\n#&gt;      Species Sepal.Length.25% Sepal.Length.50% Sepal.Length.75% Sepal.Width.25%\n#&gt; 1     setosa            4.800            5.000            5.200           3.200\n#&gt; 2 versicolor            5.600            5.900            6.300           2.525\n#&gt; 3  virginica            6.225            6.500            6.900           2.800\n#&gt;   Sepal.Width.50% Sepal.Width.75% Petal.Length.25% Petal.Length.50%\n#&gt; 1           3.400           3.675            1.400            1.500\n#&gt; 2           2.800           3.000            4.000            4.350\n#&gt; 3           3.000           3.175            5.100            5.550\n#&gt;   Petal.Length.75% Petal.Width.25% Petal.Width.50% Petal.Width.75%\n#&gt; 1            1.575             0.2             0.2             0.3\n#&gt; 2            4.600             1.2             1.3             1.5\n#&gt; 3            5.875             1.8             2.0             2.3\n\n# la specie setosa risulta ben disinguibile dalle specie versicolor e virginica,\n# quest'ultime mostrano dimensioni simili.\n# Le variabili che permettono di distinguere meglio le tre specie sono \n# la lunghezza e la larghezza dei petali.\n\n\n\n\n\n\n\n\nCon gli script è possibile tenere traccia di cosa è stato fatto, commentando il codice per renderlo maggiormente comprensibile a se stessi e ai colleghi: d’ora in poi gli script saranno il nostro principale strumento di lavoro. Vedremo poi nei prossimi capitoli un modo per includere gli script in un documento finito, migliorando ulteriormente la riproducibilità di un’analisi.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Le basi</span>"
    ]
  },
  {
    "objectID": "basics.html#esercizio",
    "href": "basics.html#esercizio",
    "title": "2  Le basi",
    "section": "2.5 Esercizio",
    "text": "2.5 Esercizio\n\nDocumentarsi sull’utilizzo della funzione aggregate;\ncalcolare la media di tutte le quattro tipologie di misure delle tre specie nel dataset iris.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Le basi</span>"
    ]
  },
  {
    "objectID": "start.html",
    "href": "start.html",
    "title": "2  Il primo assaggio",
    "section": "",
    "text": "2.1 Una bella calcolatrice\nIniziamo a prendere confidenza con la console di R, utilizzandola come una calcolatrice e scriviamo\n2 + 3\n#&gt; [1] 5\nR, in tutta la sua potenza, dovrebbe produrre\nsignifica che il risultato è un vettore formato da un elemento e tale elemento è pari a 5.\nPossiamo anche fare calcoli multipli: definiamo un vettore di 100 elementi che riporti tutti gli interi da 1 a 100 e a ognuno dei suoi elementi aggiungiamo 2.\n1:100 + 2\n#&gt;   [1]   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20\n#&gt;  [19]  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36  37  38\n#&gt;  [37]  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53  54  55  56\n#&gt;  [55]  57  58  59  60  61  62  63  64  65  66  67  68  69  70  71  72  73  74\n#&gt;  [73]  75  76  77  78  79  80  81  82  83  84  85  86  87  88  89  90  91  92\n#&gt;  [91]  93  94  95  96  97  98  99 100 101 102\nSe volessimo ripetere il calcolo ma aggiungendo 3 invece di due, possiamo cliccare sulla console, schiacciare il tasto 🔼, visualizzando l’ultimo comando eseguito, cambiare il 2 in 3 e dare invio. Tuttavia è meglio assegnare il vettore contenente i 100 elementi a una variabile che chiameremo a, così da richiamarla in seguito e fare altri calcoli.\na &lt;- 1:100\na questo punto\na + 3\n#&gt;   [1]   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20  21\n#&gt;  [19]  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36  37  38  39\n#&gt;  [37]  40  41  42  43  44  45  46  47  48  49  50  51  52  53  54  55  56  57\n#&gt;  [55]  58  59  60  61  62  63  64  65  66  67  68  69  70  71  72  73  74  75\n#&gt;  [73]  76  77  78  79  80  81  82  83  84  85  86  87  88  89  90  91  92  93\n#&gt;  [91]  94  95  96  97  98  99 100 101 102 103\nPosso usare la variabile definita poco sopra per fare altri calcoli. Per esempio, posso elevare alla seconda tutti gli elementi associati alla variabile a:\na^2\n#&gt;   [1]     1     4     9    16    25    36    49    64    81   100   121   144\n#&gt;  [13]   169   196   225   256   289   324   361   400   441   484   529   576\n#&gt;  [25]   625   676   729   784   841   900   961  1024  1089  1156  1225  1296\n#&gt;  [37]  1369  1444  1521  1600  1681  1764  1849  1936  2025  2116  2209  2304\n#&gt;  [49]  2401  2500  2601  2704  2809  2916  3025  3136  3249  3364  3481  3600\n#&gt;  [61]  3721  3844  3969  4096  4225  4356  4489  4624  4761  4900  5041  5184\n#&gt;  [73]  5329  5476  5625  5776  5929  6084  6241  6400  6561  6724  6889  7056\n#&gt;  [85]  7225  7396  7569  7744  7921  8100  8281  8464  8649  8836  9025  9216\n#&gt;  [97]  9409  9604  9801 10000\nIl valore di una variabile può essere sovrascritto con una nuova assegnazione, come nel caso riportato di seguito:\na &lt;- \"Bella zio: sto usando R!\"\nNella creazione di variabili è bene fare caso ad alcune regole:\nDurante il corso utilizzeremo nomi di variabili e funzioni scritte in caratteri minuscoli e senza lettere accentate, utilizzando gli underscore al posto degli spazi (notazione snake_case).",
    "crumbs": [
      "Le basi",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Il primo assaggio</span>"
    ]
  },
  {
    "objectID": "start.html#una-bella-calcolatrice",
    "href": "start.html#una-bella-calcolatrice",
    "title": "2  Il primo assaggio",
    "section": "",
    "text": "[1] 5\n\n\n\n\n\n\n\n\n\n\n\n\n\nR è case sensitive e quindi f ed F saranno due diverse variabili;\nnon sono ammesse variabili che iniziano con numeri (come 1variabile);\nnon sono ammessi caratteri diversi da lettere, numeri e underscore, compresi gli spazi;\nsono ammessi caratteri accentati ma complicano molto la vita.",
    "crumbs": [
      "Le basi",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Il primo assaggio</span>"
    ]
  },
  {
    "objectID": "start.html#funzioni",
    "href": "start.html#funzioni",
    "title": "2  Il primo assaggio",
    "section": "2.2 Funzioni",
    "text": "2.2 Funzioni\nLe funzioni sono una parte fondamentale di R e consentono di eseguire una serie di operazioni dati degli input, per ottenere nessuno, uno o più output: si tratta di una definizione generica perché sono elementi estremamente generici e incontreremo funzioni pressoché ovunque. Durante il corso non adotteremo la distinzione tra funzioni e metodi, dove le prime danno output e le seconde no: per noi qualunque contenitore di operazioni che vengano applicate a un input sarà una funzione.\nR permette già di utilizzare diverse funzioni. Possiamo assegnare alcuni numeri a una variabile e applicare a essi la funzione somma:\n\nb &lt;- c(2, 3, 5)\nsum(b)\n#&gt; [1] 10\n\nGli input delle funzioni vengono specificati all’interno delle parentesi tonde, ci sono funzioni che richiedono pochi input e altre che ne richiedono di più, nella prossima sezione vedremo come acquisire informazioni sull’utilizzo di una funzione.\nOltre alle funzioni già disponibili, possiamo scrivere delle funzioni personalizzate. Scrivere funzioni efficienti, robuste e ben documentate richiede pratica, però la sintassi di base è:\n\n# la funzione fammi_il_caffe prende come argomenti due stringa di caratteri\n# la prima definisce il tipo e può essere caffè o orzo\n# la seconda definisce la modalità e può essere corto, lungo e macchiato\n# l'output è una stringa di testo\nfammi_il_caffe &lt;- function(tipo = \"caffè\",\n                           modo = \"corto\"){\n  # controllo che l'input abbia le caratteristiche desiderate\n  stopifnot(is.character(tipo))\n  stopifnot(is.character(modo))\n  stopifnot(tipo %in% c(\"caffè\", \"orzo\"))\n  stopifnot(modo %in% c(\"corto\", \"lungo\", \"macchiato\"))\n  \n  # determino il prezzo scegliendo un numero casuale tra 1 e 2 con intervallo 0.1\n  prezzo &lt;- sample(seq(from = 1, to = 2, by = 0.1), 1)\n  # formatto il caffé e il prezzo\n  prodotto_txt &lt;- paste(\"Ecco a lei il suo\", tipo, modo, sep = \" \")\n  prezzo_txt &lt;- paste(\"Sono\", prezzo, \"€.\", sep = \" \")\n  \n  # il risultato è l'ultimo comando della funzione\n  paste(prodotto_txt, prezzo_txt, sep = \". \")\n}\n\n# utilizzo la funzione\nfammi_il_caffe()\n#&gt; [1] \"Ecco a lei il suo caffè corto. Sono 1.6 €.\"\nfammi_il_caffe(\"orzo\", \"lungo\")\n#&gt; [1] \"Ecco a lei il suo orzo lungo. Sono 1.4 €.\"\nfammi_il_caffe(\"orzo\", \"corretto\")\n#&gt; Error in fammi_il_caffe(\"orzo\", \"corretto\"): modo %in% c(\"corto\", \"lungo\", \"macchiato\") non è TRUE\n\nGli argomenti o input della funzione sono racchiusi tra parentesi tonde, con il loro eventuale valore predefinito dichiarato dopo l’uguale. Il corpo della funzione è racchiuso tra parentesi graffe e tipicamente contiene una parte di validazione degli argomenti, il cui scopo è assicurarsi che la funzione non venga utilizzata al di fuori del suo ambito di utilizzo, una parte in cui vengono sviluppati i conti e una parte finale contenente il risultato.",
    "crumbs": [
      "Le basi",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Il primo assaggio</span>"
    ]
  },
  {
    "objectID": "start.html#il-primo-script",
    "href": "start.html#il-primo-script",
    "title": "2  Il primo assaggio",
    "section": "2.3 Il primo script",
    "text": "2.3 Il primo script\nNella sezione precedente abbiamo visto codice che spazia su più righe: inserirlo riga per riga nella console inizia ad essere scomodo e si rischia di dimenticare cosa si è fatto poche righe prima.\nPossiamo creare un file.R in cui elencare in ordine di esecuzione i comandi che vogliamo eseguire. Per farlo è sufficiente cliccare l’icona  in alto a sinistra in RStudio, selezionare Rscript e quindi salvare il file. All’interno di tale file possiamo scrivere le seguenti istruzioni:\n\n#&gt;     Sepal.Length Sepal.Width Petal.Length Petal.Width    Species\n#&gt; 1            5.1         3.5          1.4         0.2     setosa\n#&gt; 2            4.9         3.0          1.4         0.2     setosa\n#&gt; 3            4.7         3.2          1.3         0.2     setosa\n#&gt; 4            4.6         3.1          1.5         0.2     setosa\n#&gt; 5            5.0         3.6          1.4         0.2     setosa\n#&gt; 6            5.4         3.9          1.7         0.4     setosa\n#&gt; 7            4.6         3.4          1.4         0.3     setosa\n#&gt; 8            5.0         3.4          1.5         0.2     setosa\n#&gt; 9            4.4         2.9          1.4         0.2     setosa\n#&gt; 10           4.9         3.1          1.5         0.1     setosa\n#&gt; 11           5.4         3.7          1.5         0.2     setosa\n#&gt; 12           4.8         3.4          1.6         0.2     setosa\n#&gt; 13           4.8         3.0          1.4         0.1     setosa\n#&gt; 14           4.3         3.0          1.1         0.1     setosa\n#&gt; 15           5.8         4.0          1.2         0.2     setosa\n#&gt; 16           5.7         4.4          1.5         0.4     setosa\n#&gt; 17           5.4         3.9          1.3         0.4     setosa\n#&gt; 18           5.1         3.5          1.4         0.3     setosa\n#&gt; 19           5.7         3.8          1.7         0.3     setosa\n#&gt; 20           5.1         3.8          1.5         0.3     setosa\n#&gt; 21           5.4         3.4          1.7         0.2     setosa\n#&gt; 22           5.1         3.7          1.5         0.4     setosa\n#&gt; 23           4.6         3.6          1.0         0.2     setosa\n#&gt; 24           5.1         3.3          1.7         0.5     setosa\n#&gt; 25           4.8         3.4          1.9         0.2     setosa\n#&gt; 26           5.0         3.0          1.6         0.2     setosa\n#&gt; 27           5.0         3.4          1.6         0.4     setosa\n#&gt; 28           5.2         3.5          1.5         0.2     setosa\n#&gt; 29           5.2         3.4          1.4         0.2     setosa\n#&gt; 30           4.7         3.2          1.6         0.2     setosa\n#&gt; 31           4.8         3.1          1.6         0.2     setosa\n#&gt; 32           5.4         3.4          1.5         0.4     setosa\n#&gt; 33           5.2         4.1          1.5         0.1     setosa\n#&gt; 34           5.5         4.2          1.4         0.2     setosa\n#&gt; 35           4.9         3.1          1.5         0.2     setosa\n#&gt; 36           5.0         3.2          1.2         0.2     setosa\n#&gt; 37           5.5         3.5          1.3         0.2     setosa\n#&gt; 38           4.9         3.6          1.4         0.1     setosa\n#&gt; 39           4.4         3.0          1.3         0.2     setosa\n#&gt; 40           5.1         3.4          1.5         0.2     setosa\n#&gt; 41           5.0         3.5          1.3         0.3     setosa\n#&gt; 42           4.5         2.3          1.3         0.3     setosa\n#&gt; 43           4.4         3.2          1.3         0.2     setosa\n#&gt; 44           5.0         3.5          1.6         0.6     setosa\n#&gt; 45           5.1         3.8          1.9         0.4     setosa\n#&gt; 46           4.8         3.0          1.4         0.3     setosa\n#&gt; 47           5.1         3.8          1.6         0.2     setosa\n#&gt; 48           4.6         3.2          1.4         0.2     setosa\n#&gt; 49           5.3         3.7          1.5         0.2     setosa\n#&gt; 50           5.0         3.3          1.4         0.2     setosa\n#&gt; 51           7.0         3.2          4.7         1.4 versicolor\n#&gt; 52           6.4         3.2          4.5         1.5 versicolor\n#&gt; 53           6.9         3.1          4.9         1.5 versicolor\n#&gt; 54           5.5         2.3          4.0         1.3 versicolor\n#&gt; 55           6.5         2.8          4.6         1.5 versicolor\n#&gt; 56           5.7         2.8          4.5         1.3 versicolor\n#&gt; 57           6.3         3.3          4.7         1.6 versicolor\n#&gt; 58           4.9         2.4          3.3         1.0 versicolor\n#&gt; 59           6.6         2.9          4.6         1.3 versicolor\n#&gt; 60           5.2         2.7          3.9         1.4 versicolor\n#&gt; 61           5.0         2.0          3.5         1.0 versicolor\n#&gt; 62           5.9         3.0          4.2         1.5 versicolor\n#&gt; 63           6.0         2.2          4.0         1.0 versicolor\n#&gt; 64           6.1         2.9          4.7         1.4 versicolor\n#&gt; 65           5.6         2.9          3.6         1.3 versicolor\n#&gt; 66           6.7         3.1          4.4         1.4 versicolor\n#&gt; 67           5.6         3.0          4.5         1.5 versicolor\n#&gt; 68           5.8         2.7          4.1         1.0 versicolor\n#&gt; 69           6.2         2.2          4.5         1.5 versicolor\n#&gt; 70           5.6         2.5          3.9         1.1 versicolor\n#&gt; 71           5.9         3.2          4.8         1.8 versicolor\n#&gt; 72           6.1         2.8          4.0         1.3 versicolor\n#&gt; 73           6.3         2.5          4.9         1.5 versicolor\n#&gt; 74           6.1         2.8          4.7         1.2 versicolor\n#&gt; 75           6.4         2.9          4.3         1.3 versicolor\n#&gt; 76           6.6         3.0          4.4         1.4 versicolor\n#&gt; 77           6.8         2.8          4.8         1.4 versicolor\n#&gt; 78           6.7         3.0          5.0         1.7 versicolor\n#&gt; 79           6.0         2.9          4.5         1.5 versicolor\n#&gt; 80           5.7         2.6          3.5         1.0 versicolor\n#&gt; 81           5.5         2.4          3.8         1.1 versicolor\n#&gt; 82           5.5         2.4          3.7         1.0 versicolor\n#&gt; 83           5.8         2.7          3.9         1.2 versicolor\n#&gt; 84           6.0         2.7          5.1         1.6 versicolor\n#&gt; 85           5.4         3.0          4.5         1.5 versicolor\n#&gt; 86           6.0         3.4          4.5         1.6 versicolor\n#&gt; 87           6.7         3.1          4.7         1.5 versicolor\n#&gt; 88           6.3         2.3          4.4         1.3 versicolor\n#&gt; 89           5.6         3.0          4.1         1.3 versicolor\n#&gt; 90           5.5         2.5          4.0         1.3 versicolor\n#&gt; 91           5.5         2.6          4.4         1.2 versicolor\n#&gt; 92           6.1         3.0          4.6         1.4 versicolor\n#&gt; 93           5.8         2.6          4.0         1.2 versicolor\n#&gt; 94           5.0         2.3          3.3         1.0 versicolor\n#&gt; 95           5.6         2.7          4.2         1.3 versicolor\n#&gt; 96           5.7         3.0          4.2         1.2 versicolor\n#&gt; 97           5.7         2.9          4.2         1.3 versicolor\n#&gt; 98           6.2         2.9          4.3         1.3 versicolor\n#&gt; 99           5.1         2.5          3.0         1.1 versicolor\n#&gt; 100          5.7         2.8          4.1         1.3 versicolor\n#&gt; 101          6.3         3.3          6.0         2.5  virginica\n#&gt; 102          5.8         2.7          5.1         1.9  virginica\n#&gt; 103          7.1         3.0          5.9         2.1  virginica\n#&gt; 104          6.3         2.9          5.6         1.8  virginica\n#&gt; 105          6.5         3.0          5.8         2.2  virginica\n#&gt; 106          7.6         3.0          6.6         2.1  virginica\n#&gt; 107          4.9         2.5          4.5         1.7  virginica\n#&gt; 108          7.3         2.9          6.3         1.8  virginica\n#&gt; 109          6.7         2.5          5.8         1.8  virginica\n#&gt; 110          7.2         3.6          6.1         2.5  virginica\n#&gt; 111          6.5         3.2          5.1         2.0  virginica\n#&gt; 112          6.4         2.7          5.3         1.9  virginica\n#&gt; 113          6.8         3.0          5.5         2.1  virginica\n#&gt; 114          5.7         2.5          5.0         2.0  virginica\n#&gt; 115          5.8         2.8          5.1         2.4  virginica\n#&gt; 116          6.4         3.2          5.3         2.3  virginica\n#&gt; 117          6.5         3.0          5.5         1.8  virginica\n#&gt; 118          7.7         3.8          6.7         2.2  virginica\n#&gt; 119          7.7         2.6          6.9         2.3  virginica\n#&gt; 120          6.0         2.2          5.0         1.5  virginica\n#&gt; 121          6.9         3.2          5.7         2.3  virginica\n#&gt; 122          5.6         2.8          4.9         2.0  virginica\n#&gt; 123          7.7         2.8          6.7         2.0  virginica\n#&gt; 124          6.3         2.7          4.9         1.8  virginica\n#&gt; 125          6.7         3.3          5.7         2.1  virginica\n#&gt; 126          7.2         3.2          6.0         1.8  virginica\n#&gt; 127          6.2         2.8          4.8         1.8  virginica\n#&gt; 128          6.1         3.0          4.9         1.8  virginica\n#&gt; 129          6.4         2.8          5.6         2.1  virginica\n#&gt; 130          7.2         3.0          5.8         1.6  virginica\n#&gt; 131          7.4         2.8          6.1         1.9  virginica\n#&gt; 132          7.9         3.8          6.4         2.0  virginica\n#&gt; 133          6.4         2.8          5.6         2.2  virginica\n#&gt; 134          6.3         2.8          5.1         1.5  virginica\n#&gt; 135          6.1         2.6          5.6         1.4  virginica\n#&gt; 136          7.7         3.0          6.1         2.3  virginica\n#&gt; 137          6.3         3.4          5.6         2.4  virginica\n#&gt; 138          6.4         3.1          5.5         1.8  virginica\n#&gt; 139          6.0         3.0          4.8         1.8  virginica\n#&gt; 140          6.9         3.1          5.4         2.1  virginica\n#&gt; 141          6.7         3.1          5.6         2.4  virginica\n#&gt; 142          6.9         3.1          5.1         2.3  virginica\n#&gt; 143          5.8         2.7          5.1         1.9  virginica\n#&gt; 144          6.8         3.2          5.9         2.3  virginica\n#&gt; 145          6.7         3.3          5.7         2.5  virginica\n#&gt; 146          6.7         3.0          5.2         2.3  virginica\n#&gt; 147          6.3         2.5          5.0         1.9  virginica\n#&gt; 148          6.5         3.0          5.2         2.0  virginica\n#&gt; 149          6.2         3.4          5.4         2.3  virginica\n#&gt; 150          5.9         3.0          5.1         1.8  virginica\n#&gt;      Species Sepal.Length.25% Sepal.Length.50% Sepal.Length.75% Sepal.Width.25%\n#&gt; 1     setosa            4.800            5.000            5.200           3.200\n#&gt; 2 versicolor            5.600            5.900            6.300           2.525\n#&gt; 3  virginica            6.225            6.500            6.900           2.800\n#&gt;   Sepal.Width.50% Sepal.Width.75% Petal.Length.25% Petal.Length.50%\n#&gt; 1           3.400           3.675            1.400            1.500\n#&gt; 2           2.800           3.000            4.000            4.350\n#&gt; 3           3.000           3.175            5.100            5.550\n#&gt;   Petal.Length.75% Petal.Width.25% Petal.Width.50% Petal.Width.75%\n#&gt; 1            1.575             0.2             0.2             0.3\n#&gt; 2            4.600             1.2             1.3             1.5\n#&gt; 3            5.875             1.8             2.0             2.3\n\n\n\n\n\n\n\n\nCon gli script è possibile tenere traccia di cosa è stato fatto, commentando il codice per renderlo maggiormente comprensibile a se stessi e ai colleghi: d’ora in poi gli script saranno il nostro principale strumento di lavoro. Vedremo poi nei prossimi capitoli un modo per includere gli script in un documento finito, migliorando ulteriormente la riproducibilità di un’analisi.",
    "crumbs": [
      "Le basi",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Il primo assaggio</span>"
    ]
  },
  {
    "objectID": "start.html#chiedere-aiuto",
    "href": "start.html#chiedere-aiuto",
    "title": "2  Il primo assaggio",
    "section": "2.4 Chiedere aiuto",
    "text": "2.4 Chiedere aiuto\nQuesta è la sezione più importante dell’intero corso in quanto permette di capire come muoversi sulle proprie gambe, cadendo senza farsi troppo male e tentando di rialzarsi.\nR offre un ottimo aiuto in linea: ogni pacchetto, dataset e funzione è documentata, contiene quindi tutte le informazioni necessarie a definirne gli ambiti e modi di utilizzo. Per accedere a queste informazioni è sufficiente anteporre un ? all’elemento del quale si desidera sapere di più:\n\n?sum()\n?iris\n\nSe l’elemento di cui si vuole sapere di più è presente in un pacchetto noto ma non attualmente caricato, sarà necessario specificare il pacchetto a cui appartiene l’elemento:\n\n?ggplot2::geom_point()\n\nSe l’elemento di cui si vuole sapere di più è presente in un pacchetto ignoto, installato ma non attualmente caricato, si può lanciare una ricerca tra i pacchetti installati nel sistema anteponendo ?? all’elemento stesso e poi selezionando la voce di interesse:\n\n??geom_point()\n\nAll’interno della sezione help è presente una descrizione iniziale dell’elemento e, se si tratta di una funzione, dei diversi input richiesti, seguono poi sezioni in cui viene spesso spiegato il funzionamento delle funzione, per finire con utili esempi d’uso.\nA volte, potrebbe non essere sufficiente ricorrere all’aiuto in linea, in tal caso si consiglia di rivolgersi a Google o qualche large language model (LLM) come DeepSeek, ChatGPT o Perplexity. Quest’ultimi strumenti di intelligenza artificiale permettono, a fronte di richieste dettagliate e ben strutturate di farsi scrivere e spiegare interi programmi, anche complessi, richiedendo poche rifiniture manuali.\nAlternativi e complementari all’uso di strumenti di intelligenza artificiale, sono presenti forum dedicati alla programmazione e con una folta comunità di preparatissimi (e spesso burberi) utilizzatori di R. Tra questi forum StackOverflow risulta particolarmente ricco di spunti e risorse. Per utilizzarlo al meglio:\n\ncercate con cura se la vostra domanda sia già stata posta in passato;\nprendete spunto da domande simili per strutturare con cura la vostra richiesta;\ncreate un esempio minimo riproducibile (reprex).\n\nL’ultimo punto ha lo scopo di rendere il vostro codice riproducibile e facilmente leggibile da chi vi dovrà aiutare: inserite nel codice tutte le librerie e variabili usate e togliete tutto quanto non è indispensabile per riprodurre il problema su cui state chiedendo aiuto.",
    "crumbs": [
      "Le basi",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Il primo assaggio</span>"
    ]
  },
  {
    "objectID": "start.html#esercizio",
    "href": "start.html#esercizio",
    "title": "2  Il primo assaggio",
    "section": "2.5 Esercizio",
    "text": "2.5 Esercizio\n\nDocumentarsi sull’utilizzo della funzione aggregate;\ncalcolare la media di tutte le quattro tipologie di misure delle tre specie nel dataset iris.",
    "crumbs": [
      "Le basi",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Il primo assaggio</span>"
    ]
  },
  {
    "objectID": "objects.html",
    "href": "objects.html",
    "title": "3  Oggetti di R",
    "section": "",
    "text": "3.1 Tipologie di elementi\nPrima di vedere le classi di oggetti di R, che possiamo pensare come diverse tipologie di contenitori, è bene dare una rapida occhiata alla tipologia di elementi che possiamo mettere in tali contenitori.\nQuando saremo in dubbio sulla tipologia di un dato elemento possiamo usare la funzione typeof().",
    "crumbs": [
      "Le basi",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Oggetti di R</span>"
    ]
  },
  {
    "objectID": "objects.html#sec-typeof",
    "href": "objects.html#sec-typeof",
    "title": "3  Oggetti di R",
    "section": "",
    "text": "3.1.1 Numeri\nR ha la possibilità di gestire diverse tipologie di numeri, tuttavia noi useremo principalmente la tipologia double che abbrevia il nome double-precision floating-point format: che definisce come in informatica vengono archiviati e manipolati gli elementi esprimibili con una parte decimale. Ogni misura - con l’esclusione dei conteggi puri - anche una che dovesse avere valore 5, ricade in questa tipologia. Utilizzare questa tipologia di elementi è semplice:\n\na &lt;- c(2, 2.1, 2.5)\n\nPiù raramente dovremo definire degli interi. Essi afferiscono alla tipologia integer e si scrivono facendo seguire una L maiuscola al numero:\n\nb &lt;- c(1L, 5L)\n\nAltre tipologie di numeri più esotiche comprendono i tipi complex e raw, rispettivamente per numeri complessi e bytes: non li useremo.\nNumeri particolari che possiamo ottenere a seguito di operazioni matematiche sono NaN: not a number, Inf e -Inf: il primo è ottenibile, ad esempio, dividendo zero per zero mentre gli ultimi rispettivamente dividendo un numero positivo o negativo per zero. Si può testare se un numero sia NaN o Inf rispettivamente con le funzioni is.nan() e is.infinite().\n\n\n3.1.2 Testo\nR mette a disposizione una singola tipologia per le stringhe di testo: indipendentemente dalla loro lunghezza saranno tutte character e si scrivono racchiudendo i diversi elementi tra singole o doppie virgolette alte (nel corso utilizzeremo sempre le doppie virgolette):\n\nc &lt;- \"roba\"\n\nTalvolta i numeri possono anche essere archiviati come testo, ad esempio , tuttavia si tratta perlopiù di un risultato indesiderato ma abbastanza frequente quando vengono importati dati non ben ripuliti: vedremo e rimedieremo a casi di questo tipo nei prossimi capitoli.\n\n\n3.1.3 Logici\nGli elementi logici sono quelli che possono assumere esclusivamente valore TRUE o FALSE: difficilmente vengono assegnati a mano in una variabile ma compaiono spesso a seguito di un’operazione logica:\n\nd &lt;- 3 &lt; 5\nd\n#&gt; [1] TRUE\ntypeof(d)\n#&gt; [1] \"logical\"\n\ne &lt;- 3 == 3L\n\n\n\n3.1.4 Elementi mancanti ed elementi nulli\nR identifica gli elementi mancanti con NA: not available. NA rappresenta una tipologia particolare in quanto diventa di tipo testo, numero o logico a seconda di dove si trova. Tipicamente, operazioni eseguiti su gruppi di elementi dove uno o più di essi sono NA, danno risultato NA. Si può verificare se un elemento è di tipo NA con la funzione is.na().\nTalvolta, applicando una funzione",
    "crumbs": [
      "Le basi",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Oggetti di R</span>"
    ]
  },
  {
    "objectID": "objects.html#vettori",
    "href": "objects.html#vettori",
    "title": "3  Oggetti di R",
    "section": "3.2 Vettori",
    "text": "3.2 Vettori\nI vettori sono un insieme di valori non ordinati, tutti appartenenti alla stessa tipologia. Tutte le variabili create nella sezione Sezione 3.1 sono esempi di vettori: anche se alcuni contengono solo numeri, testo o valori logici non contengono mai elementi ascrivibili a più di una tipologia e possiedono una sola dimensione.\nPosso accedere ai diversi elementi di un vettore attraverso la notazione vettore[indici] dove indici è a sua volta un vettore da includere o escludere:\n\nf &lt;- c(\"a\", \"b\", \"c\", NA, \"e\")\nf[1] # seleziono solo il primo elemento\n#&gt; [1] \"a\"\nf[-1] # seleziono tutti gli elementi tranne il primo\n#&gt; [1] \"b\" \"c\" NA  \"e\"\nf[2:4] # seleziono gli elementi dal secondo al quarto, estremi compresi\n#&gt; [1] \"b\" \"c\" NA\nf[-(2:4)] # seleziono tutti gli elementi tranne quelli dal secondo al quarto\n#&gt; [1] \"a\" \"e\"\nf[c(2,4)] # seleziono il secondo e quarto elemento\n#&gt; [1] \"b\" NA\nf[-c(2,4)] # seleziono tutti gli elementi tranne il secondo e il quarto\n#&gt; [1] \"a\" \"c\" \"e\"\ng &lt;- c(3,5)\nf[g] # seleziono il terzo e quinto elemento\n#&gt; [1] \"c\" \"e\"\nf[-g] # seleziono tutti gli elementi tranne il terzo e il quinto\n#&gt; [1] \"a\" \"b\" NA\nf[is.na(f)] # seleziono solo gli elementi NA\n#&gt; [1] NA\nf[!is.na(f)] # seleziono solo gli elementi non NA\n#&gt; [1] \"a\" \"b\" \"c\" \"e\"\n\nPer verificare se ho a che fare con un vettore posso usare la funzione is.vector(), mentre per determinare quanti elementi contenga uso la funzione length().",
    "crumbs": [
      "Le basi",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Oggetti di R</span>"
    ]
  }
]